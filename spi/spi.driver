/**
 * SPI Driver Implementation
 *
 */
#include "interface.h"
#include "../library.h"


/**
 * These variables are "private" and are only used inside this file.
 *
 * When running on a microcontroller they will be pointed towards the Microcontroller driver SPI functions,
 * when unit testing they will be pointed to mock functions to verify driver functionality
 */
static void(*_mc_spi_setup_func)(spi_bus, io_pin, io_pin, io_pin) = NULL;
static uint8_t(*_mc_spi_transmit_func)(spi_bus, void*, uint8_t) = NULL;




/* Setups a specific SPI bus */
void spi_setup(spi_bus bus, io_pin mosi, io_pin miso, io_pin sck)
{
  _mc_spi_setup_func(bus, mosi, miso, sck);
}


/* Sends data over a SPI bus, returns received data */
uint8_t spi_transmit(spi_bus bus, uint8_t data)
{
  return _mc_spi_transmit_func(bus, (void*)&data, sizeof(data));
}




/* SPI Driver initialization (Should not be called by user unless unit testing) */
void spi_initialization(
  void(*spiSetup)(spi_bus, io_pin, io_pin, io_pin),
  uint8_t(*spiTransmit)(spi_bus, void*, uint8_t)
)
{
  _mc_spi_setup_func = spiSetup;
  _mc_spi_transmit_func = spiTransmit;
}


