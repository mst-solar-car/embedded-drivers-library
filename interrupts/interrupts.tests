/**
 * Unit Tests for the Interrupt Drivers
 *
 * Authors: Michael Rouse
 */
#ifdef UNIT_TEST
#include "../library.h"
#include "interface.h"
#include "../testing/framework.h"

CREATE_GROUP(Interrupts);


/* Mock Functions Needed */
uint8_t MOCK_FUNC(get_interrupt_port_bit, (uint8_t port), {
  return 4;
});

void MOCK_FUNC(sample_isr, (void), {

});



/* Test Attaching and Dispatching an Interrupt */
TEST(Interrupts, AttachAndDispatchInterrupt)
{
  // Arrange
  interrupt_attach(P2_4, MOCK(sample_isr));

  // Act
  __interrupt_dispatch(PORT2);

  // Assert
  TEST_ASSERT_MOCK_CALLED(get_interrupt_port_bit);
  TEST_ASSERT_MOCK_CALLED(sample_isr);
}



/* Run all of the Interrupts Tests */
GROUP_RUNNER(Interrupts)
{
  PERFORM_TEST(Interrupts, AttachAndDispatchInterrupt);
}



/* Runs before every test in the Interrupts Group */
GROUP_TEST_SETUP(Interrupts)
{
  RESET_MOCK(get_interrupt_port_bit);

  /* Initialize the Interrupts Drivers */
  interrupts_initialization(MOCK(get_interrupt_port_bit));
}

/* Runs after every test */
GROUP_TEST_TEARDOWN(Interrupts)
{
}

#endif