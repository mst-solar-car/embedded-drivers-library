/**
 * Pin Control Driver Implementation
 *
 * Author: Michael Rouse
 */
#include "../datatypes.h"
#include "interface.h"
#include <msp430f5529.h>


/* Allows for access to registers defined in the microcontrollers driver */
extern pin_map_t pin_map[];
extern vuint8_t* out_registers[];
extern vuint8_t* in_registers[];
extern vuint8_t* dir_registers[];
extern vuint8_t* sel_registers[];
extern vuint8_t* ies_registers[];
extern vuint8_t* ie_registers[];
extern vuint8_t* ifg_registers[];


/**
 * Interface Functions
 */

/* Sets a pin to a certain mode (e.g., Input or Output) */
void pin_set_mode(io_pin pin, pin_mode mode)
{
  pin_info_t _pin = GetPinInfo(pin);
  if (!IsValidPinInfo(_pin) || _pin.dir_reg == NO_REGISTER)
    return;

  if (mode == Input)
    *(_pin.dir_reg) |= _pin.bit;
  else
    *(_pin.dir_reg) &= ~(_pin.bit);
}


/* Sets a pin to a level (e.g., High or Low) */
void pin_set_level(io_pin pin, pin_level level)
{
  pin_info_t _pin = GetPinInfo(pin);
  if (!IsValidPinInfo(_pin) || _pin.out_reg == NO_REGISTER)
    return;

  if (level == High)
    *(_pin.out_reg) |= _pin.bit;
  else
    *(_pin.out_reg) &= ~(_pin.bit);
}


/* Toggles a pin, sets it High if it is Low, and Low if it is High */
void pin_toggle(io_pin pin)
{
  pin_info_t _pin = GetPinInfo(pin);
  if (!IsValidPinInfo(_pin) || _pin.out_reg == NO_REGISTER)
    return;

  if (*(_pin.out_reg) & _pin.bit)
    *(_pin.out_reg) &= ~(_pin.bit);
  else
    *(_pin.out_reg) |= _pin.bit;
}


/* Returns the level of a pin (e.g., High or Low) */
pin_level pin_read(io_pin pin)
{
  pin_info_t _pin = GetPinInfo(pin);
  if (!IsValidPinInfo(_pin) || _pin.in_reg == NO_REGISTER)
    return Low;

  if (*(_pin.in_reg) & _pin.bit)
    return High;
  else
    return Low;
}

